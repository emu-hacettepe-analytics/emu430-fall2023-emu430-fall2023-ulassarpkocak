[
  {
    "objectID": "project.html",
    "href": "project.html",
    "title": "Our Course Project",
    "section": "",
    "text": "I’m honored to be a member of the [QuantFlare] project\nBelow, you’ll find a brief summary of our project. To access a detailed project description, please go to https://drive.google.com/file/d/1kiejhGSntJjeWOBp5D3TTWrPg0r2rnSw/view?usp=drive_link].\nSummary\n[The datasets “number of foreign babies by year” and “population growth rate in Turkey” are among those we have selected. Working with this dataset piques our curiosity because it can be used for a wide range of potential analysis. Furthermore, we think it offers insightful information about shifts in Turkey’s demographic composition. When interpreted, the data can have significance and span a wide range of observable issues. We believe it would be helpful to compare Turkey’s total population growth rate with the growth rate of the foreign population and show the demographic changes, even though we are unsure of the precise tasks for the project’s future stages. The required population data by city and year is provided by the datasets we will be working with, enabling us to investigate variations in changes in the demographic structure of different cities.]\n\n\n\n Back to top"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Welcome to My Analytics Lab",
    "section": "",
    "text": "Hello! My name is Ulaş Sarp Koçak.\nThis is my personal webpage…\nPlease stay tuned to follow my works on data analytics, blog posts, and more.\nThis is our template.\n\n\n\n Back to top"
  },
  {
    "objectID": "assignments/assignment-2.html",
    "href": "assignments/assignment-2.html",
    "title": "Assignment 2",
    "section": "",
    "text": "Assignment 2\n\n1 + 1\n\n[1] 2\n\n\n\n\n\n\n Back to top"
  },
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About Me",
    "section": "",
    "text": "B.S., Industrial Engineering, Hacettepe University, Turkey, 2023 - ongoing."
  },
  {
    "objectID": "about.html#employements",
    "href": "about.html#employements",
    "title": "About Me",
    "section": "Employements",
    "text": "Employements"
  },
  {
    "objectID": "about.html#internships",
    "href": "about.html#internships",
    "title": "About Me",
    "section": "Internships",
    "text": "Internships\n\nFirm ROKETSAN, position enterprise process management and continuous improvement intern, year 2023\nFirm GEMAK, position production planning and lean production intern, year 2022"
  },
  {
    "objectID": "assignments/assignment-1.html",
    "href": "assignments/assignment-1.html",
    "title": "Assignment 1",
    "section": "",
    "text": "1 + 1\n\n[1] 2\n\n\nMy first assignment has two parts.\n\n\nIn this short video, the process of deploying a Shiny for Python application from Posit Workbench is explained. The narrator is using VS Code for Posit Connect. They have a Shiny for Python application named “app.py” in their directory.\nTo get started, they mention that you need to install some packages for this workflow. They use pip to install the Shiny package and rsconnect-python for deploying the applications. Additionally, they mention that the application depends on two popular data science packages, matplotlib and numpy, and ensure that these packages are installed.\nBefore deploying, they emphasize the importance of making sure the application works correctly locally. They run the Shiny application and obtain a URL, which leads to their Shiny for Python application. The application includes a simple slider that changes the number of boxes in a histogram as you slide it.\nThe final step is deploying the application to Posit Connect using the rsconnect package. They specify the Connect server’s name using the -n argument and provide the directory containing “app.py.” The deployment process involves capturing and saving the environment, then sending it to Connect for deployment. After the deployment is complete, they receive two URLs, with one taking them directly to Posit Connect, where they can see the application running in a Connect instance.\nIn summary, the video demonstrates how to deploy a Shiny for Python application using Posit Connect, from package installation to local testing and final deployment on Posit Connect.\n\n\n\n\nR: Apply, lapply, and sapply are just a few of the functions that are used in R’s functional programming language to manipulate data. R code is frequently written in a more vectorized and succinct manner. Python: Python employs an imperative, more general-purpose programming paradigm. It defines code chunks using indentation, or whitespace, and places a strong emphasis on readability with a consistent and straightforward grammar.\n\nExample in R:\ndata &lt;- c(1, 2, 3, 4, 5) squared_data &lt;- lapply(data, function(x) x^2)\nExample in Python:\ndata = [1, 2, 3, 4, 5] squared_data = [x**2 for x in data]\n\nR: R provides factors and data frames, which are specific data formats for data analysis. Because data frames and database tables are comparable, working with structured data is simple. Python: Python is a versatile language for a wide range of applications, not just data analysis, thanks to its more varied built-in data structures, which include lists, dictionaries, and sets.\n\nExample in R:\ndf &lt;- data.frame(Name = c(“Alice”, “Bob”, “Charlie”), Age = c(25, 30, 35))\nExample in Python:\ndata = [{“Name”: “Alice”, “Age”: 25}, {“Name”: “Bob”, “Age”: 30}, {“Name”: “Charlie”, “Age”: 35}]\n\nR: R offers many specialized programs for data analysis, like “lubridate” for working with dates and “tidyverse” (containing dplyr, ggplot2, and tidyr). These packages offer strong data visualization and manipulation tools. Python: NumPy, Pandas, Matplotlib, SciPy, and other data analysis packages are available in Python. These libraries offer extensive capabilities for a range of scientific and technical activities, not just data analysis.\n\nExample in R:\nlibrary(dplyr) filtered_data &lt;- df %&gt;% filter(Age &gt; 30)\nExample in Python:\nimport pandas as pd df = pd.DataFrame(data) filtered_data = df[df[‘Age’] &gt; 30]"
  },
  {
    "objectID": "assignments.html",
    "href": "assignments.html",
    "title": "My Assignments",
    "section": "",
    "text": "On this page, I showcase the assignment I conducted for the [term and year, e.g. Fall 2023] EMU 430 Data Analytics course.\nPlease use left menu to navigate through my assignments.\nThe most recent update to this page was made on October 25, 2023\n\n\n\n Back to top"
  },
  {
    "objectID": "posts.html",
    "href": "posts.html",
    "title": "My Blog",
    "section": "",
    "text": "This page is under construction.\n\n\n\n Back to top"
  },
  {
    "objectID": "assignments/assignment-1.html#a",
    "href": "assignments/assignment-1.html#a",
    "title": "Assignment 1",
    "section": "",
    "text": "In this short video, the process of deploying a Shiny for Python application from Posit Workbench is explained. The narrator is using VS Code for Posit Connect. They have a Shiny for Python application named “app.py” in their directory.\nTo get started, they mention that you need to install some packages for this workflow. They use pip to install the Shiny package and rsconnect-python for deploying the applications. Additionally, they mention that the application depends on two popular data science packages, matplotlib and numpy, and ensure that these packages are installed.\nBefore deploying, they emphasize the importance of making sure the application works correctly locally. They run the Shiny application and obtain a URL, which leads to their Shiny for Python application. The application includes a simple slider that changes the number of boxes in a histogram as you slide it.\nThe final step is deploying the application to Posit Connect using the rsconnect package. They specify the Connect server’s name using the -n argument and provide the directory containing “app.py.” The deployment process involves capturing and saving the environment, then sending it to Connect for deployment. After the deployment is complete, they receive two URLs, with one taking them directly to Posit Connect, where they can see the application running in a Connect instance.\nIn summary, the video demonstrates how to deploy a Shiny for Python application using Posit Connect, from package installation to local testing and final deployment on Posit Connect."
  },
  {
    "objectID": "assignments/assignment-1.html#b",
    "href": "assignments/assignment-1.html#b",
    "title": "Assignment 1",
    "section": "",
    "text": "R: Apply, lapply, and sapply are just a few of the functions that are used in R’s functional programming language to manipulate data. R code is frequently written in a more vectorized and succinct manner. Python: Python employs an imperative, more general-purpose programming paradigm. It defines code chunks using indentation, or whitespace, and places a strong emphasis on readability with a consistent and straightforward grammar.\n\nExample in R:\ndata &lt;- c(1, 2, 3, 4, 5) squared_data &lt;- lapply(data, function(x) x^2)\nExample in Python:\ndata = [1, 2, 3, 4, 5] squared_data = [x**2 for x in data]\n\nR: R provides factors and data frames, which are specific data formats for data analysis. Because data frames and database tables are comparable, working with structured data is simple. Python: Python is a versatile language for a wide range of applications, not just data analysis, thanks to its more varied built-in data structures, which include lists, dictionaries, and sets.\n\nExample in R:\ndf &lt;- data.frame(Name = c(“Alice”, “Bob”, “Charlie”), Age = c(25, 30, 35))\nExample in Python:\ndata = [{“Name”: “Alice”, “Age”: 25}, {“Name”: “Bob”, “Age”: 30}, {“Name”: “Charlie”, “Age”: 35}]\n\nR: R offers many specialized programs for data analysis, like “lubridate” for working with dates and “tidyverse” (containing dplyr, ggplot2, and tidyr). These packages offer strong data visualization and manipulation tools. Python: NumPy, Pandas, Matplotlib, SciPy, and other data analysis packages are available in Python. These libraries offer extensive capabilities for a range of scientific and technical activities, not just data analysis.\n\nExample in R:\nlibrary(dplyr) filtered_data &lt;- df %&gt;% filter(Age &gt; 30)\nExample in Python:\nimport pandas as pd df = pd.DataFrame(data) filtered_data = df[df[‘Age’] &gt; 30]"
  }
]